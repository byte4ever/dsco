// Code generated by mockery v2.13.1. DO NOT EDIT.

package dsco

import (
	svalue "github.com/byte4ever/dsco/internal/svalue"
	mock "github.com/stretchr/testify/mock"
)

// MockStringValuesProvider is an autogenerated mock type for the StringValuesProvider type
type MockStringValuesProvider struct {
	mock.Mock
}

// GetStringValues provides a mock function with given fields:
func (_m *MockStringValuesProvider) GetStringValues() svalue.Values {
	ret := _m.Called()

	var r0 svalue.Values
	if rf, ok := ret.Get(0).(func() svalue.Values); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(svalue.Values)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockStringValuesProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockStringValuesProvider creates a new instance of MockStringValuesProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockStringValuesProvider(t mockConstructorTestingTNewMockStringValuesProvider) *MockStringValuesProvider {
	mock := &MockStringValuesProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
