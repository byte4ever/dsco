// Code generated by mockery v2.13.1. DO NOT EDIT.

package walker

import mock "github.com/stretchr/testify/mock"

// MockFieldValuesGetter is an autogenerated mock type for the FieldValuesGetter type
type MockFieldValuesGetter struct {
	mock.Mock
}

// GetFieldValues provides a mock function with given fields: model
func (_m *MockFieldValuesGetter) GetFieldValues(model ModelInterface) (FieldValues, []error) {
	ret := _m.Called(model)

	var r0 FieldValues
	if rf, ok := ret.Get(0).(func(ModelInterface) FieldValues); ok {
		r0 = rf(model)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(FieldValues)
		}
	}

	var r1 []error
	if rf, ok := ret.Get(1).(func(ModelInterface) []error); ok {
		r1 = rf(model)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]error)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewMockFieldValuesGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFieldValuesGetter creates a new instance of MockFieldValuesGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFieldValuesGetter(t mockConstructorTestingTNewMockFieldValuesGetter) *MockFieldValuesGetter {
	mock := &MockFieldValuesGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
