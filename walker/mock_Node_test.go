// Code generated by mockery v2.13.1. DO NOT EDIT.

package walker

import (
	reflect "reflect"

	mock "github.com/stretchr/testify/mock"
)

// MockNode is an autogenerated mock type for the Node type
type MockNode struct {
	mock.Mock
}

// BuildGetList provides a mock function with given fields: s
func (_m *MockNode) BuildGetList(s *GetList) {
	_m.Called(s)
}

// FeedFieldValues provides a mock function with given fields: srcID, fieldValues, value
func (_m *MockNode) FeedFieldValues(srcID string, fieldValues FieldValues, value reflect.Value) {
	_m.Called(srcID, fieldValues, value)
}

// Fill provides a mock function with given fields: fillReporter, value, layers
func (_m *MockNode) Fill(fillReporter FillReporter, value reflect.Value, layers []FieldValues) {
	_m.Called(fillReporter, value, layers)
}

type mockConstructorTestingTNewMockNode interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockNode creates a new instance of MockNode. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockNode(t mockConstructorTestingTNewMockNode) *MockNode {
	mock := &MockNode{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
