// Code generated by mockery v2.12.3. DO NOT EDIT.

package walker

import (
	reflect "reflect"

	mock "github.com/stretchr/testify/mock"
)

// MockWalkFunc is an autogenerated mock type for the actionFunc type
type MockWalkFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: order, path, value
func (_m *MockWalkFunc) Execute(order int, path string, value *reflect.Value) error {
	ret := _m.Called(order, path, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, string, *reflect.Value) error); ok {
		r0 = rf(order, path, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewMockWalkFuncT interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockWalkFunc creates a new instance of MockWalkFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockWalkFunc(t NewMockWalkFuncT) *MockWalkFunc {
	mock := &MockWalkFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
