// Code generated by mockery v2.12.3. DO NOT EDIT.

package strukt

import mock "github.com/stretchr/testify/mock"

// MockInterfaceProvider is an autogenerated mock type for the InterfaceProvider type
type MockInterfaceProvider struct {
	mock.Mock
}

// GetInterface provides a mock function with given fields:
func (_m *MockInterfaceProvider) GetInterface() (interface{}, error) {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewMockInterfaceProviderT interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockInterfaceProvider creates a new instance of MockInterfaceProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockInterfaceProvider(t NewMockInterfaceProviderT) *MockInterfaceProvider {
	mock := &MockInterfaceProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
