// Code generated by mockery v2.12.3. DO NOT EDIT.

package sbased

import (
	goconf "github.com/byte4ever/goconf"
	mock "github.com/stretchr/testify/mock"
)

// MockStrEntriesProvider is an autogenerated mock type for the StrEntriesProvider type
type MockStrEntriesProvider struct {
	mock.Mock
}

// GetEntries provides a mock function with given fields:
func (_m *MockStrEntriesProvider) GetEntries() StrEntries {
	ret := _m.Called()

	var r0 StrEntries
	if rf, ok := ret.Get(0).(func() StrEntries); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(StrEntries)
		}
	}

	return r0
}

// GetOrigin provides a mock function with given fields:
func (_m *MockStrEntriesProvider) GetOrigin() goconf.Origin {
	ret := _m.Called()

	var r0 goconf.Origin
	if rf, ok := ret.Get(0).(func() goconf.Origin); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(goconf.Origin)
	}

	return r0
}

type NewMockStrEntriesProviderT interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockStrEntriesProvider creates a new instance of MockStrEntriesProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockStrEntriesProvider(t NewMockStrEntriesProviderT) *MockStrEntriesProvider {
	mock := &MockStrEntriesProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
