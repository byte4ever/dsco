// Code generated by mockery v2.13.1. DO NOT EDIT.

package ifaces

import (
	"github.com/stretchr/testify/mock"

	"github.com/byte4ever/dsco/internal/fvalue"
)

// MockFieldValuesGetter is an autogenerated mock type for the FieldValuesGetter type
type MockFieldValuesGetter struct {
	mock.Mock
}

// GetFieldValuesFrom provides a mock function with given fields: model
func (_m *MockFieldValuesGetter) GetFieldValuesFrom(model ModelInterface) (fvalue.Values, error) {
	ret := _m.Called(model)

	var r0 fvalue.Values
	if rf, ok := ret.Get(0).(func(ModelInterface) fvalue.Values); ok {
		r0 = rf(model)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(fvalue.Values)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(ModelInterface) error); ok {
		r1 = rf(model)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockFieldValuesGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFieldValuesGetter creates a new instance of MockFieldValuesGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFieldValuesGetter(t mockConstructorTestingTNewMockFieldValuesGetter) *MockFieldValuesGetter {
	mock := &MockFieldValuesGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
